name: Build and Release Tauri App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Install Tauri CLI
        run: yarn global add @tauri-apps/cli

      - name: Build for Linux
        run: |
          yarn tauri build --target x86_64-unknown-linux-gnu
          cp src-tauri/target/release/bundle/deb/comboom_punkt_sucht_app_*.deb comboom_punkt_sucht_app-linux.deb

      - name: Push Linux binaries to temp branch
        run: |
          git config --global user.email "mcpeaps_HD@outlook.com"
          git config --global user.name "mcpeapsUnterstrichHD"
          git checkout -b temp-binaries-linux || git checkout temp-binaries-linux
          mkdir -p linux
          cp comboom_punkt_sucht_app-linux.deb linux/
          git add linux/
          git commit -m "Add Linux binaries"
          git pull origin temp-binaries-linux --rebase || true
          git push origin temp-binaries-linux

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Install Tauri CLI
        run: yarn global add @tauri-apps/cli

      - name: Build for macOS
        run: |
          yarn tauri build --target aarch64-apple-darwin
          yarn tauri build --target x86_64-apple-darwin
          lipo -create -output comboom_punkt_sucht_app-macos-universal target/aarch64-apple-darwin/release/comboom_punkt_sucht_app target/x86_64-apple-darwin/release/comboom_punkt_sucht_app

      - name: Push macOS binaries to temp branch
        run: |
          git config --global user.email "mcpeaps_HD@outlook.com"
          git config --global user.name "mcpeapsUnterstrichHD"
          git checkout -b temp-binaries-macos || git checkout temp-binaries-macos
          mkdir -p macos
          cp comboom_punkt_sucht_app-macos-universal macos/
          git add macos/
          git commit -m "Add macOS universal binary"
          git pull origin temp-binaries-macos --rebase || true
          git push origin temp-binaries-macos

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Install Tauri CLI
        run: yarn global add @tauri-apps/cli

      - name: Build for Windows
        run: |
          yarn tauri build --target x86_64-pc-windows-msvc
          cp src-tauri/target/release/bundle/msi/comboom_punkt_sucht_app.msi comboom_punkt_sucht_app-windows.msi

      - name: Push Windows binaries to temp branch
        run: |
          git config --global user.email "mcpeaps_HD@outlook.com"
          git config --global user.name "mcpeapsUnterstrichHD"
          git checkout -b temp-binaries-windows || git checkout temp-binaries-windows
          mkdir -p windows
          cp comboom_punkt_sucht_app-windows.msi windows/
          git add windows/
          git commit -m "Add Windows binaries"
          git pull origin temp-binaries-windows --rebase || true
          git push origin temp-binaries-windows

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Install Tauri CLI
        run: yarn global add @tauri-apps/cli

      - name: Install Android SDK and NDK
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          sudo apt-get install -y android-sdk android-sdk-platform-versions android-sdk-platform-tools android-sdk-build-tools
          sudo apt-get install -y android-ndk

      - name: Build for Android
        run: |
          yarn tauri build --target aarch64-linux-android
          cp src-tauri/target/aarch64-linux-android/release/bundle/apk/comboom_punkt_sucht_app.apk comboom_punkt_sucht_app-android.apk

      - name: Push Android binaries to temp branch
        run: |
          git config --global user.email "mcpeaps_HD@outlook.com"
          git config --global user.name "mcpeapsUnterstrichHD"
          git checkout -b temp-binaries-android || git checkout temp-binaries-android
          mkdir -p android
          cp comboom_punkt_sucht_app-android.apk android/
          git add android/
          git commit -m "Add Android APK"
          git pull origin temp-binaries-android --rebase || true
          git push origin temp-binaries-android

  release:
    needs: [build-linux, build-macos, build-windows, build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          VERSION=$(grep '^version = ' src-tauri/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Download binaries
        run: |
          mkdir -p linux macos windows android
          wget https://github.com/comboomPunkTsucht/comboom.sucht-BLOG/raw/temp-binaries-linux/linux/comboom_punkt_sucht_app-linux.deb -O linux/comboom_punkt_sucht_app-linux.deb || echo "Failed to download Linux binary"
          wget https://github.com/comboomPunkTsucht/comboom.sucht-BLOG/raw/temp-binaries-macos/macos/comboom_punkt_sucht_app-macos-universal -O macos/comboom_punkt_sucht_app-macos-universal || echo "Failed to download macOS binary"
          wget https://github.com/comboomPunkTsucht/comboom.sucht-BLOG/raw/temp-binaries-windows/windows/comboom_punkt_sucht_app-windows.msi -O windows/comboom_punkt_sucht_app-windows.msi || echo "Failed to download Windows binary"
          wget https://github.com/comboomPunkTsucht/comboom.sucht-BLOG/raw/temp-binaries-android/android/comboom_punkt_sucht_app-android.apk -O android/comboom_punkt_sucht_app-android.apk || echo "Failed to download Android APK"

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view "${VERSION}" > /dev/null 2>&1; then
            echo "Release ${VERSION} exists"
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Release ${VERSION} does not exist"
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or Update Release
        if: env.RELEASE_EXISTS == 'false'
        run: |
          echo "Creating new release ${VERSION}"
          gh release create "${VERSION}" \
            linux/comboom_punkt_sucht_app-linux.deb \
            macos/comboom_punkt_sucht_app-macos-universal \
            windows/comboom_punkt_sucht_app-windows.msi \
            android/comboom_punkt_sucht_app-android.apk \
            --title "Release ${VERSION}" \
            --notes "Release version ${VERSION} created on $(date +'%Y-%m-%d')"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Release
        if: env.RELEASE_EXISTS == 'true'
        run: |
          echo "Updating release ${VERSION}"
          gh release upload "${VERSION}" \
            linux/comboom_punkt_sucht_app-linux.deb \
            macos/comboom_punkt_sucht_app-macos-universal \
            windows/comboom_punkt_sucht_app-windows.msi \
            android/comboom_punkt_sucht_app-android.apk \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete temp branches
        if: always()
        run: |
          git push origin --delete temp-binaries-linux || echo "Failed to delete temp-binaries-linux branch"
          git push origin --delete temp-binaries-macos || echo "Failed to delete temp-binaries-macos branch"
          git push origin --delete temp-binaries-windows || echo "Failed to delete temp-binaries-windows branch"
          git push origin --delete temp-binaries-android || echo "Failed to delete temp-binaries-android branch"